(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{197:function(s,a,n){"use strict";n.r(a);var p=n(0),t=Object(p.a)({},function(){var s=this.$createElement;return(this._self._c||s)("div",{staticClass:"content"},[this._ssrNode('<h1 id="引发全表扫描"><a href="#引发全表扫描" aria-hidden="true" class="header-anchor">#</a> 引发全表扫描</h1><div class="warning custom-block"><p class="custom-block-title">警告</p><p>在有很多分表，并且数据量很大的情况下，进行全表扫描几乎是一场灾难，如果要查询样例数据，我们何不加上分片键并且<code>limit 1</code>呢？</p></div><p>如果不能合理的应用分片键，那么将会引发全表扫描，其实不仅仅是<code>SELECT</code>语句，像<code>UPDATE</code>语句以及<code>DELETE</code>都会引发全表操作，只不过<code>SELECT</code>的危害最大</p><p>这里说明一下怎么样的SQL会进行全表扫描，我们假定<code>name</code>属性为分片键。</p><h2 id="没有分片键"><a href="#没有分片键" aria-hidden="true" class="header-anchor">#</a> 没有分片键</h2><p>最简单的，当我们没有使用分片键时，bigsql会引发全表扫描，因为没有分片键，bigsql就没有办法定位数据分片的位置，只能进行全表扫描。</p><h2 id="不等于分片键"><a href="#不等于分片键" aria-hidden="true" class="header-anchor">#</a> 不等于分片键</h2><p>另一方面，即使我们的语句中已经有了分片键中的值，但是如果进行的是不等于操作，还是引会全表扫描，SQL如下:</p><div class="language-sql extra-class"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span><span class="token keyword">user</span><span class="token punctuation">`</span> <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token operator">!=</span><span class="token string">\'abc\'</span><span class="token punctuation">;</span>\n<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span><span class="token keyword">user</span><span class="token punctuation">`</span> <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">\'abc\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span><span class="token keyword">user</span><span class="token punctuation">`</span> <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token operator">!=</span> <span class="token string">\'abc\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">UPDATE</span> <span class="token punctuation">`</span><span class="token keyword">user</span><span class="token punctuation">`</span> <span class="token keyword">set</span> age<span class="token operator">=</span><span class="token number">10</span> <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token operator">!=</span> <span class="token string">\'abc\'</span><span class="token punctuation">;</span>\n\n</code></pre></div><h2 id="带有-or-的语句"><a href="#带有-or-的语句" aria-hidden="true" class="header-anchor">#</a> 带有 OR 的语句</h2><p>我们知道，<code>OR</code>是或者的意思，所以我们即使是在语句中带有了分片键，我们也无法定位到一个准确的数据源，bigsql只能进行全表扫描，语句如下：</p><div class="language-sql extra-class"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span><span class="token keyword">user</span><span class="token punctuation">`</span> <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token operator">=</span> <span class="token string">\'abc\'</span> <span class="token operator">or</span> age <span class="token operator">=</span> <span class="token number">28</span><span class="token punctuation">;</span>\n\n<span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span><span class="token keyword">user</span><span class="token punctuation">`</span> <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token operator">=</span> <span class="token string">\'abc\'</span> <span class="token operator">or</span> age <span class="token operator">=</span> <span class="token number">28</span><span class="token punctuation">;</span>\n\n<span class="token keyword">UPDATE</span> <span class="token punctuation">`</span><span class="token keyword">user</span><span class="token punctuation">`</span> <span class="token keyword">set</span> age<span class="token operator">=</span><span class="token number">10</span> <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token operator">=</span> <span class="token string">\'abc\'</span> <span class="token operator">or</span> age <span class="token operator">=</span> <span class="token number">28</span><span class="token punctuation">;</span>\n\n</code></pre></div><p>如果我们要查询分片键中的多种可能，我们其实可以把它换成<code>IN</code>,如下:</p><div class="language-sql extra-class"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span>  <span class="token punctuation">`</span><span class="token keyword">user</span><span class="token punctuation">`</span> <span class="token keyword">WHEN</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token operator">=</span> <span class="token string">\'abc\'</span> <span class="token operator">or</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token operator">=</span><span class="token string">\'xxx\'</span><span class="token punctuation">;</span>\n</code></pre></div><p>我们可以换成这种写法，这是不会引发全表扫描的</p><div class="language-sql extra-class"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span>  <span class="token punctuation">`</span><span class="token keyword">user</span><span class="token punctuation">`</span> <span class="token keyword">WHEN</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">\'abc\'</span><span class="token punctuation">,</span><span class="token string">\'XXX\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="禁用全表扫描"><a href="#禁用全表扫描" aria-hidden="true" class="header-anchor">#</a> 禁用全表扫描</h2><p>因为全表扫描是代价是非常大的，在分布式数据库中，我们一般不会写出这样的语句，但是也无法完全避免开发人员的误操作，所以bigsql提供了一个参数来禁止执行全表扫描的语句，一旦遇到这样的语句，就会返回ERROR。\n设置方式如下，我们进入表规则的配置，在<code>properties</code>中加上下面的内容</p><div class="language-xml extra-class"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key</span><span class="token punctuation">&gt;</span></span>allowFullScan<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>key</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p>如果你还不清楚，那么可以参考建立逻辑表的配置方式</p>')])},[],!1,null,null,"219224b6");a.default=t.exports}}]);