(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{194:function(a,n,s){"use strict";s.r(n);var t=s(0),p=Object(t.a)({},function(){var a=this.$createElement;return(this._self._c||a)("div",{staticClass:"content"},[this._ssrNode('<h1 id="哈希切片"><a href="#哈希切片" aria-hidden="true" class="header-anchor">#</a> 哈希切片</h1><p>这里的哈希分表是单键分片，bigsql内置的哈希分片策略，支持分表，同时也支持分库分表。</p><h2 id="小提示"><a href="#小提示" aria-hidden="true" class="header-anchor">#</a> 小提示</h2><div class="warning custom-block"><p class="custom-block-title">选择一个好的分片键</p><p>哈希切片，从名字上我们就可以得知，这是根据哈希值的一个分片，所以我们对于分片键的选择尤其重要，因为我们要避免哈希倾斜，如果哈希倾斜太严重，那么会非常大的影响分片效率。\n所以我们需要选择一些内容并不是太固定的值进行分片，尽可能的让数据均衡的分布在各个分表中。</p></div><div class="danger custom-block"><p class="custom-block-title">尽可能的使用分片键</p><p>为了提升查询效率，我们需要尽我们最大的可能，在查询的时候带上分片键，因为这样bigsql能准确的定位到一个物理数据源，并且执行相关操作，否则bigsql只能进行全表扫描，\n在一个拥有着大量分表，并且数据量极其庞大的情况下，全表扫描简直是一个灾难！</p></div><h2 id="配置内容"><a href="#配置内容" aria-hidden="true" class="header-anchor">#</a> 配置内容</h2><p>我们进入bigsql/conf/schema/中，创建一个数据库文件夹，然后创建一个逻辑表的配置，配置信息如下，其实我们也可以参考bigsql/template/tableName.xml文件</p><div class="language-xml extra-class"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strategy</span><span class="token punctuation">&gt;</span></span>SingleColumnHashShardingStrategy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strategy</span><span class="token punctuation">&gt;</span></span>\n    \n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key</span><span class="token punctuation">&gt;</span></span>dataSource<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>key</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>dataSourceName0,dataSourceName1,dataSourceName2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>\n        \n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key</span><span class="token punctuation">&gt;</span></span>shardingColumn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>key</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>columnName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key</span><span class="token punctuation">&gt;</span></span>shardingNumber<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>key</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="配置说明"><a href="#配置说明" aria-hidden="true" class="header-anchor">#</a> 配置说明</h2><p>其实我们可以看到，其实整个配置文件分为两部分，第一部分就是声明规则名称，第二部分就是key-value对</p><div class="language-xml extra-class"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- 这一行代表着使用的策略名称，一般来说，策略是默认使用当前类名作为策略名称，\n    当然，如果是自定义的策略插件，也可以对它进行覆盖 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strategy</span><span class="token punctuation">&gt;</span></span>SingleColumnHashShardingStrategy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strategy</span><span class="token punctuation">&gt;</span></span>\n    \n    <span class="token comment">&lt;!-- 这下面的全部都是键值对了 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>\n    \n        <span class="token comment">&lt;!-- 配置物理数据源列表，这里是分库分表，\n        如果只有一个数据源，那就是不分库，只分表 --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key</span><span class="token punctuation">&gt;</span></span>dataSource<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>key</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>dataSourceName0,dataSourceName1,dataSourceName2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>\n        \n        <span class="token comment">&lt;!-- 配置分片的键的列名 --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key</span><span class="token punctuation">&gt;</span></span>shardingColumn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>key</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>columnName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>\n\n        <span class="token comment">&lt;!-- 分为多少个表，这里拆分为8个表 --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key</span><span class="token punctuation">&gt;</span></span>shardingNumber<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>key</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p>如上方的配置，我们定义了3个数据源，并且定义了8个分表，如果我们定义的是9个分表，理所应当的，每个数据源有着3个分表，\n但是我们现在使用了8个分表，它的分布情况如下：</p><ul><li>dataSourceName0 : table_1,table_2,table_3</li><li>dataSourceName1 : table_4,table_5,table_6</li><li>dataSourceName2 : table_7,table_8</li></ul><div class="tip custom-block"><p class="custom-block-title">提示</p><p>数据源的命名是没有限制的，配置文件中可以随意命名。\n但是物理表的命名，却是有规则的，我们需要以逻辑表的名称为开始，然后加入下划线，加上分表编号为后缀，值得注意的是，这里的编号是从1开始</p></div><div class="warning custom-block"><p class="custom-block-title">注意</p><p>物理表需要我们自己去创建，bigsql并不会帮我们创建</p></div>')])},[],!1,null,null,"07857d3d");n.default=p.exports}}]);