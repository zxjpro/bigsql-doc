(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{166:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"时间分片"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#时间分片","aria-hidden":"true"}},[t._v("#")]),t._v(" 时间分片")]),s("h2",{attrs:{id:"小提示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小提示","aria-hidden":"true"}},[t._v("#")]),t._v(" 小提示")]),s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("时间分片不支持全表扫描")]),s("p",[t._v("出于性能以及安全方面的考虑，bigsql并不打算支持时间分片的全表扫描。")]),s("p",[t._v("我们可以试想一下，一个已经运行了一两年的逻辑表，到底会存在多少数据，如果我们写出"),s("code",[t._v("SELECT * FROM table_name")]),t._v("这样的SQL，\n那么对于bigsql来说，将是难以想象的压力。")])]),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("分片时间必须指定区域")]),s("p",[t._v("bigsql要求查询条件中，时间字段，必须给定一个区域，比如"),s("code",[t._v("BETWEEN AND")]),t._v("，或者"),s("code",[t._v("time > [startTime] and time < [endTime]")]),t._v("，或者"),s("code",[t._v("time = [timeValue]")]),t._v("。")]),s("p",[t._v("其实这样做的原因可以理解，如果我们写了这样一个条件"),s("code",[t._v("time > [timeValue]")]),t._v("，那么随着时间的增长，分片表会越来越多，就意味着定位到的分片表会越来越多，查询的复杂度也就会越来越多，而对于一个透明的中间件来说，这是开发人员很容易忽略掉的。")])]),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),s("p",[t._v("分片的时间参数，不能小于定义的最小分片值。比如我们定义的最小边界为2018年，那么我们就不能插入2018年以前的数据。")]),s("p",[t._v("两个区间值，不能相等，比如"),s("code",[t._v("time >= '2018-01-01' and time <= '2018-01-01'")]),t._v("，如果相等，则直接使用"),s("code",[t._v("time = '2018-01-01'")])]),s("p",[t._v("查询条件给定的区域中，最大不能超过12个分片表，也就是说，如果你是按月分表，那么你的查询条件中，最多查询12个月的数据，也就是一年。")])]),s("h2",{attrs:{id:"配置内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置内容","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置内容")]),s("p",[t._v("我们进入bigsql/conf/schema/中，创建一个数据库文件夹，然后创建一个逻辑表的配置，配置信息如下，其实我们也可以参考\nbigsql/template/time_sharding.xml文件")]),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("rule")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- the strategy name --\x3e")]),t._v("\n    "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("strategy")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("StandardTimeShardingStrategy"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("strategy")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- standard time sharding --\x3e")]),t._v("\n    "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("properties")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- sharding by time format --\x3e")]),t._v("\n        "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("shardingFormat"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n            "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- YEAR,MONTH,DAY   --\x3e")]),t._v("\n            "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("value")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("MONTH"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("value")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("property")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- config the sharding column name --\x3e")]),t._v("\n        "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("shardingColumn"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("value")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("create_time"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("value")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("property")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n\n\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- config the time range in dataSource ...start  --\x3e")]),t._v("\n\n\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!--[yyyyMMdd-yyyyMMdd]=dataSourceName --\x3e")]),t._v("\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- start <= shardingTime < end --\x3e")]),t._v("\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- the date range,will be save dataSource1 --\x3e")]),t._v("\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- we can config multipart range by ; --\x3e")]),t._v("\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- the multipart range is must order by date asc , bigsql get the first match dataSource--\x3e")]),t._v("\n        "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("range"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("value")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" [20170101-20180101]=dataSource1   ;   [20180101-20180501]=dataSource2   ;   [20180301-?]=dataSource3 "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("value")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("property")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!--[yyyyMMdd-?]=dataSourceName --\x3e")]),t._v("\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- ? is the future time  --\x3e")]),t._v("\n\n\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- config the time range in dataSource ...end  --\x3e")]),t._v("\n\n    "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("properties")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("rule")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h2",{attrs:{id:"配置说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置说明","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置说明")]),s("p",[t._v("同样的，配置文件，声明了分片策略名称，后面就是具体的key-value信息")]),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("rule")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- 策略名称，这个策略名称代表着标准时间分片 --\x3e")]),t._v("\n    "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("strategy")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("StandardTimeShardingStrategy"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("strategy")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- 标准时间分片 --\x3e")]),t._v("\n    "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("properties")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- 按时间分片的颗粒度 --\x3e")]),t._v("\n        "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("shardingFormat"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n            "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- 这里有三种格式，分别是年，月，日 ，对应着关键字 YEAR,MONTH,DAY   --\x3e")]),t._v("\n\t\t\t"),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- 如下就是按月分片 --\x3e")]),t._v("\n            "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("value")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("MONTH"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("value")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("property")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- 设置分片键，这里是按照create_time来分片 --\x3e")]),t._v("\n        "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("shardingColumn"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("value")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("create_time"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("value")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("property")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n\n\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- 配置时间分区区域...开始  --\x3e")]),t._v("\n\n\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!--[yyyyMMdd-yyyyMMdd]=dataSourceName --\x3e")]),t._v("\n\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- 分片开始时间 <= 传入的分片时间 < 分片的结束时间 --\x3e")]),t._v("\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- 等号后面的是该分片区域的数据源名称 --\x3e")]),t._v("\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- 我们可以配置多个分片区域，以 ; 隔开 --\x3e")]),t._v("\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- 多个分片区域，必须按时间的正序排序 , 因为bigsql会获取最先定位到的range--\x3e")]),t._v("\n        "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("range"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("value")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" [20170101-20180101]=dataSourceName1   ;   [20180101-?]=dataSourceName2"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("value")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("property")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!--[yyyyMMdd-?]=dataSourceName --\x3e")]),t._v("\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- 问号代表着往后的所有时间，如果哪天数据库的数据量过多，到了需要增加数据库的时间，就把问号改为具体的时间，然后再增加一个区域  --\x3e")]),t._v("\n\n\n        "),s("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- 配置时间分片区域 ...结束  --\x3e")]),t._v("\n\n    "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("properties")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("rule")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("我们重点看一下range的配置。")]),s("p",[t._v("比如我们有"),s("code",[t._v("[20170101-20180101]=dataSourceName1 ; [20180101-20190101]=dataSourceName2 ; [20190101-?]=dataSourceName3")])]),s("p",[t._v("代表着2017年的数据，会存在数据源"),s("code",[t._v("dataSourceName1")]),t._v("中，而2018年的数据，会存在"),s("code",[t._v("dataSourceName2")]),t._v("中，2019年后的数据，会存在"),s("code",[t._v("dataSourceName3")]),t._v("中。\n问号代表着未来的所有时间。当然如果到了2010年，需要再增加一个数据库的时候，我们又可以再增加一个时间段的分片，就可以满足扩容了，比如改成\n"),s("code",[t._v("[20170101-20180101]=dataSourceName1 ; [20180101-20190101]=dataSourceName2 ; [20190101-20200101]=dataSourceName3 ; [20200101-?]=dataSourceName4")])]),s("h2",{attrs:{id:"分片表的创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分片表的创建","aria-hidden":"true"}},[t._v("#")]),t._v(" 分片表的创建")]),s("blockquote",[s("p",[t._v("分片表，就是一个物理表的名称，它是真实的存放在mysql实例中的表")])]),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),s("p",[t._v("分片表需要手工创建，我们可以一次性创建未来几个月可用的分片表。但是创建的时间，需要按照配置的range，创建在不同的数据库中。每个分片表的表结构必须一致。")])]),s("p",[t._v("那么bigsql的逻辑表，是如何与分片表对应起来的呢？假设我们的逻辑表名为"),s("code",[t._v("person")])]),s("h3",{attrs:{id:"按年分表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#按年分表","aria-hidden":"true"}},[t._v("#")]),t._v(" 按年分表")]),s("table",[s("thead",[s("tr",[s("th",[t._v("时间")]),s("th",[t._v("分片表名")])])]),s("tbody",[s("tr",[s("td",[t._v("2016年")]),s("td",[t._v("person_2016")])]),s("tr",[s("td",[t._v("2017年")]),s("td",[t._v("person_2017")])]),s("tr",[s("td",[t._v("2018年")]),s("td",[t._v("person_2018")])])])]),s("h3",{attrs:{id:"按月分表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#按月分表","aria-hidden":"true"}},[t._v("#")]),t._v(" 按月分表")]),s("table",[s("thead",[s("tr",[s("th",[t._v("时间")]),s("th",[t._v("分片表名")])])]),s("tbody",[s("tr",[s("td",[t._v("2016年1月")]),s("td",[t._v("person_201601")])]),s("tr",[s("td",[t._v("2016年11月")]),s("td",[t._v("person_201611")])]),s("tr",[s("td",[t._v("2018年5月")]),s("td",[t._v("person_201805")])])])]),s("h3",{attrs:{id:"按天分表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#按天分表","aria-hidden":"true"}},[t._v("#")]),t._v(" 按天分表")]),s("table",[s("thead",[s("tr",[s("th",[t._v("时间")]),s("th",[t._v("分片表名")])])]),s("tbody",[s("tr",[s("td",[t._v("2016年1月1日")]),s("td",[t._v("person_20160101")])]),s("tr",[s("td",[t._v("2016年10月11日")]),s("td",[t._v("person_20161011")])]),s("tr",[s("td",[t._v("2018年9月11日")]),s("td",[t._v("person_20160911")])])])])])}],!1,null,null,null);a.default=e.exports}}]);