(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{192:function(a,e,r){"use strict";r.r(e);var h=r(0),n=Object(h.a)({},function(){var a=this.$createElement;return(this._self._c||a)("div",{staticClass:"content"},[this._ssrNode('<h1 id="未完成功能"><a href="#未完成功能" aria-hidden="true" class="header-anchor">#</a> 未完成功能</h1><h2 id="监控eventloopgroup的线程使用情况"><a href="#监控eventloopgroup的线程使用情况" aria-hidden="true" class="header-anchor">#</a> 监控EventLoopGroup的线程使用情况</h2><p>使用Executor的构造方法即可</p><h2 id="做一个web界面"><a href="#做一个web界面" aria-hidden="true" class="header-anchor">#</a> 做一个WEB界面</h2><p>另做一个程序，以socket连接</p><h2 id="刷新配置"><a href="#刷新配置" aria-hidden="true" class="header-anchor">#</a> 刷新配置</h2><p>不停机刷新配置，数据源也可以刷新，但是只能增加数据源，如果修改数据源参数，比如修改最大连接数之类是不会刷新的，因为如果重新创建数据源，\n那么需要关掉之前的数据源，会影响线上业务</p><h2 id="批量插入"><a href="#批量插入" aria-hidden="true" class="header-anchor">#</a> 批量插入</h2><p>批量插入需要在insert代码中实现，是否考虑实现功能，因为事务的问题，有可能一部分成功，一部分失败</p><h2 id="navicat插入不显示自动增长主键"><a href="#navicat插入不显示自动增长主键" aria-hidden="true" class="header-anchor">#</a> navicat插入不显示自动增长主键</h2><p>在navicat中插入数据后，自动增长的主键不刷新，是因为没有返回客户端column信息，</p>')])},[],!1,null,null,"1f639a68");e.default=n.exports}}]);